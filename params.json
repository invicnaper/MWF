{"name":"Mwf","tagline":"MWF is a web framework written in C++","body":"![alt text](https://cdn3.iconfinder.com/data/icons/internet-and-web-4/78/internt_web_technology-06-128.png \"mwf logo\")\r\n\r\nMWF\r\n===\r\n\r\nMWF is a web framework written in C++\r\n\r\nScreen\r\n===\r\n![alt text](http://naper.eu/blog/content/public/upload/time_0_o.png)![alt text](http://naper.eu/blog/content/public/upload/screen_0_o.png)\r\n\r\n***\r\n\r\nSource code\r\n===\r\n\r\nDownload the source code and than build them using :\r\n\r\n    $make compil\r\n  \r\nCode Example\r\n===\r\n\r\n### Param :\r\n```c++\r\n    #include \"mwf.h\"\r\n    int main(){\r\n        Mwu::Frame frame;\r\n        Mw::Html html;\r\n        Mw::Methods m;\r\n        Mw::Function funct;\r\n        int a ;\r\n        frame.__init(\"Param testing\",\"Description\");\r\n        if(funct.url_isset()){\r\n                a = m.i_GET(\"a\");\r\n                print << \"a = \" << a ; \r\n        }else{\r\n                print << \"<b>no param</b>\";\r\n        }\r\n        frame.__end();\r\n        return 0;\r\n    }\r\n```\r\nthis will check if the query string exist and then will print the content of the param \"a\"\r\n\r\nMwf lib \r\n===\r\n\r\n### Linux :\r\nyou can download the .deb package or the mwf installer in [libmwflin](https://www.naper.eu)\r\n\r\n### Windows :\r\nsoon\r\n\r\nDocumentation\r\n===\r\n\r\n##Mwu::Frame\r\n```c\r\n    void \t__init (const char *title, const char *description)\r\n    void \t__load (const char *module)\r\n    void \t__end ()\r\n```\r\n##Mw::List\r\n```c\r\n    SmwList * \ts_init (SmwList *list)\r\n    DmwList * \td_init (DmwList **list)\r\n    SmwList * \ts_del (SmwList *list)\r\n    DmwList * \td_del (DmwList **list)\r\n    list * \t__sconstruct ()\r\n    list * \t__dconstruct ()\r\n    int \tsprint (SmwList *list, char c)\r\n    int \tdprint (DmwList **list, char *string)\r\n    int \tsexec (SmwList *list)\r\n    int \tdexec (DmwList **list)\r\n    SmwList * \tp_sprint (SmwList *list, char c)\r\n    DmwList * \tp_dprint (DmwList **list, char *string)\r\n    SmwList * \tshow (SmwList *list)\r\n```\r\n##Mw::Html\r\n```c\r\n    void \tlink (const char *string, const char *href, const char *style)\r\n    void \tp (const char *string, const char *style)\r\n    void \th (const char *string, int type, const char *style)\r\n    void \timg (const char *src, int heigh, int width)\r\n    void \tcss_local (const char *file, const char *type)\r\n    void \tdiv (const char *style)\r\n    void \tspan (const char *style)\r\n    void \tul (const char *style)\r\n    void \tli (const char *style)\r\n    void \tcode (const char *string, const char *style)\r\n    void \tjs_local (const char *file)\r\n    void \tcss_web (const char *href, const char *type)\r\n    void \tjs_web (const char *href)\r\n    void \tcheckbox (char *string, const char *style)\r\n```    \r\n##Mw::Methods\r\n```c\r\n    char * \t_GET (char *param)\r\n    char * \t_POST (const char *param)\r\n    int \ti_GET (char param[1025])\r\n    void \tredirect (const char *href)\r\n```    \r\n##Mw::Time\r\n```c    \r\n    clock_t \tload_page ()\r\n    clock_t \tload_composent ()\r\n    clock_t \tload_list (SmwList *list)\r\n    clock_t \tcurrentTime ()\r\n    double \tloadedTime (clock_t start, clock_t end)\r\n    void \tdraw_time (clock_t start, clock_t end, int type)\r\n```\r\n##Mw::Function\r\n```c\r\n    void \tremoveChr (char *str, char c)\r\n    void \tremoveNbr (char *str)\r\n    void \tgetNbr (char *str)\r\n    void \tremoveStr (char *str, const char *r)\r\n    char * \tparsing_url (char *s, char *param)\r\n    int \turl_isset ()\r\n    int \tisset (char *mod)\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}